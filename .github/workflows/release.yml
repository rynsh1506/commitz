name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build release binary
        run: cargo build --release

      - name: Upload artifact per OS
        uses: actions/upload-artifact@v4
        with:
          name: commitz-${{ matrix.os }}
          path: target/release/commitz

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: commitz-ubuntu-latest
          path: ./linux

      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: commitz-macos-latest
          path: ./mac

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: commitz-windows-latest
          path: ./win

      - name: Prepare files for release
        run: |
          mkdir -p release
          cp linux/commitz release/commitz-linux
          cp mac/commitz release/commitz-mac
          cp win/commitz.exe release/commitz.exe

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
