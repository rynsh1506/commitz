name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install musl target (Linux only)
        if: matrix.os == 'ubuntu-latest'
        run: rustup target add x86_64-unknown-linux-musl

      - name: Build release binary
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            cargo build --release --target x86_64-unknown-linux-musl
          else
            cargo build --release
          fi

      - name: Upload artifact per OS
        run: |
          mkdir -p artifacts
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            cp target/x86_64-unknown-linux-musl/release/commitz artifacts/commitz-linux
          elif [ "${{ matrix.os }}" == "macos-latest" ]; then
            cp target/release/commitz artifacts/commitz-mac
          else
            cp target/release/commitz.exe artifacts/commitz.exe
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: commitz-${{ matrix.os }}
          path: artifacts/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: commitz-ubuntu-latest
          path: ./linux

      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: commitz-macos-latest
          path: ./mac

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: commitz-windows-latest
          path: ./win

      - name: Prepare files for release
        run: |
          mkdir -p release
          cp linux/commitz-linux release/commitz-linux
          cp mac/commitz-mac release/commitz-mac
          cp win/commitz.exe release/commitz.exe

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
